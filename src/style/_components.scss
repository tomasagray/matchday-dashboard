@use "sass:math";
@use "variables";
@use "colors";

.Banner-title {
  border-bottom: .5em solid colors.$darkBg;
  margin-bottom: 3rem;
}

.Small-button {
  padding: .5rem 1.2rem;
  border: 2px solid #ccc;
  border-radius: 5px;
  background-color: #333;
  color: #ccc;

  &[disabled] {
    cursor: not-allowed;
    background-color: #666;
    color: #333;
    border-color: #333;
  }

  &:hover:not([disabled]) {
    color: whitesmoke;
    border-color: whitesmoke;
    background-color: colors.$currentNavItemBg;
  }
}

.Detail-header {
  display: flex;
  flex-direction: row;
  justify-content: left;

  .Detail-poster {
    max-width: 15vw;
    max-height: 40vh;
  }

  .Detail-title {
    text-align: left;
  }
}

.loading-box {
  display: flex;
  justify-content: center;
  box-sizing: border-box;
  padding: 5rem;
  width: 100%;
}

.Nav-link {
  border: 0;
  width: variables.$navigationSquare;
  height: variables.$navigationSquare;
  opacity: .5;
  background-color: transparent;
  transition: opacity 250ms ease-in-out, background-color 250ms ease-in-out;

  &:hover, &:active {
    opacity: .95;
    background-color: colors.$navButtonHover;
  }

  img {
    max-height: 2rem;
    max-width: 2rem;
  }
}

.Scroll-wrapper {
  position: relative;
  top: variables.$navMenuPadding + variables.$navMenuPadding;
  height: 100%;
  width: 100%;
}

.Settings-group {
  margin: 4rem 0;
  max-width: 75%;

  .Setting-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: .6rem 1rem;
    margin: 1rem 0;
    background-color: colors.$defaultComponentBg;
    border-radius: 1rem;
  }

  .Settings-link {

    &:hover {
      background-color: rgba(255, 255, 255, .2);
      cursor: pointer;
    }

    .link-arrow {
      max-height: 2rem;
      opacity: .3;
    }
  }
}

.Toggle-switch {
  position: relative;
  display: inline-block;
  width: 3.6rem;
  height: 1.9rem;
  cursor: pointer;

  .slider {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: colors.$darkBg;
    box-shadow: inset 0px -1px 10px colors.$shadow;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider:before, .slider > * {
    position: absolute;
    content: "";
    height: variables.$sliderSize;
    width: variables.$sliderSize;
    left: 2px;
    bottom: 2px;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider > * {
    -webkit-transition: .4s;
    transition: .4s;
    max-width: 100%;
  }

  &.Checked > .slider {
    background-color: colors.$highlight;
    box-shadow: none;
  }

  &.Transitioning > .slider {
    background-color: #666;
  }

  &.Transitioning > .slider:before,
  &.Transitioning > .slider > * {
    -ms-transform: translateX(math.div(variables.$sliderSize, 2));
    transform: translateX(math.div(variables.$sliderSize, 2));
    background-color: #aaa;
    cursor: wait;
  }

  &.Checked > .slider:before,
  &.Checked > .slider > * {
    -ms-transform: translateX(variables.$sliderSize);
    transform: translateX(variables.$sliderSize);
  }

  & .spinner {
    opacity: 0;
  }

  &.Transitioning .spinner {
    opacity: 1;
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 2rem;
  }

  .slider.round:before {
    border-radius: 50%;
  }
}

.Error-message {
  display: flex;
  border: 1px solid #444;
  box-shadow: 3px 3px 5px colors.$shadow;
  padding: 2em;
  width: fit-content;

  & > img {
    width: 8em;
    height: 8em;
    background-color: red;
    border-radius: 100%;
  }

  .Error-description-container {
    padding: 0 3em;

    p {
      margin: 10px 0;
    }

    .Error-title {
      margin: 0;
      text-align: start;
      padding: 0;
    }

    .Error-description {
      color: #ccc;
    }

    .Error-code {
      color: #666;
    }
  }
}

.Collapsable-container {

  border: 2px solid #666;
  border-radius: .5rem;
  margin: 2rem 0;
  overflow: hidden;

  .Title-bar {
    display: flex;
    align-content: center;
    justify-content: space-between;
    background-color: colors.$darkBg;
    padding: 1rem;

    &:hover {
      cursor: pointer;
      background-color: colors.$defaultComponentBg;

      & img {
        opacity: .9;
      }
    }

    & img {
      height: 24px;
      display: flex;
      justify-content: right;
      opacity: .5;
      transform: rotate(90deg);
      //animation: flipArrowCollapsed .5 linear;

      &.expanded {
        transform: rotate(-90deg);
        animation: flipArrowExpanded .5s linear;
      }
    }
  }

  .Content-area {
    height: 0;
    display: none;
    animation: collapseContainer .5s linear;
    background-color: colors.$defaultComponentBg;

    &.expanded {
      height: revert;
      display: block;
      animation: expandContainer .5s linear;
    }
  }

  @keyframes flipArrowExpanded {
    from {
      transform: rotate(90deg);
    }
    to {
      transform: rotate(-90deg);
    }
  }

  @keyframes flipArrowCollapsed {
    from {
      transform: rotate(-90deg);
    }
    to {
      transform: rotate(90deg);
    }
  }

  @keyframes expandContainer {
    0% {
      height: 0;
      display: none;
    }
    100% {
      height: revert;
      display: block;
    }
  }

  @keyframes collapseContainer {
    0% {
      height: revert;
    }
    100% {
      height: 0;
    }
  }
}

.Floating-menu {
  background-color: #333;
  padding: 0;
  border: 1px solid #222;
  position: absolute;
  transform: translate(2rem, 3rem);
  box-shadow: 3px 3px 3px colors.$shadow;

  &.hidden {
    display: none;
  }

  ul {
    list-style: none;
  }
}

.Menu-item {
  padding: .5rem 1rem;
  display: flex;
  align-items: center;
  justify-content: space-between;

  &:hover {
    background-color: #888;
    cursor: pointer;
  }

  img {
    width: 1rem;
    float: right;
    vertical-align: top;
    display: inline;
    height: 1rem;
    margin-left: 1.5rem;
    opacity: .5;
  }

  &:hover img {
    opacity: .9;
  }
}
