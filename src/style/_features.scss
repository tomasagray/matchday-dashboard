@use "colors";
@use "variables";

// Events
@mixin Poster {
  box-sizing: content-box;
  border: 1px solid transparent;

  &:hover {
    background-color: rgba(255, 255, 255, .1);
    border-color: rgba(200, 200, 200, .1);
  }
}

.Item-poster {
  @include Poster;
  max-width: 10vw;
}

.Event-poster {
  @include Poster;
  max-width: variables.$eventPosterWidth;
}

.Event-title {
  font-weight: bold;
}

.Event-date {
  color: #aaa;
}

// Plugins
.Plugin-button-tile {
  width: 20vw;
  padding: 1.8rem;
  border: 1px solid #333;
  border-radius: .6rem;
  box-shadow: 3px 3px 3px colors.$shadow;

  &.active {
    background-color: #444;
  }

  &:hover {
    cursor: pointer;
    background-color: rgba(255, 255, 255, .1);
  }

  .Plugin-button-title {
    font-weight: bold;
    color: #777;
  }

  &.active .Plugin-button-title {
    color: whitesmoke;
  }

  &.active .Plugin-id {
    color: #ccc;

    strong {
      color: whitesmoke;
    }
  }
}

.Plugin-id {
  font-size: 10pt;
  margin: 4px;
  color: #666;

  strong {
    color: #aaa;
  }
}

// Data Sources
$dataSourceExtBorder: 1px solid #ccc;
$dataSourceIntBorder: 1px solid #666;

.Data-source-display {

  padding: 1rem 2rem;

  & > div {
    margin: 1rem 0;
  }

  label {
    font-size: 1.3rem;
    margin-right: 1rem;
  }
}

.Type-header {

  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.25rem;
  border-top: $dataSourceExtBorder;
  border-right: $dataSourceExtBorder;

  &:first-child {
    border-left: $dataSourceExtBorder;
  }

  &:hover {
    background-color: rgba(200, 200, 200, .2);
    cursor: pointer;
  }

  &.selected {
    background-color: colors.$selected;
  }
}

.Pattern-kit-display {
  background-color: colors.$darkBg;
  border: $dataSourceExtBorder;
  border-radius: 0 0 .5rem .5rem;
  overflow: hidden;
  padding: 1rem;

  .Pattern-kit-type {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #333;
    padding-left: 1rem;

    input[type=text] {
      width: fit-content;
    }
  }

  .Pattern-kit-editor {
    border-collapse: collapse;
    border-radius: 1rem;
    width: 100%;

    tr:not(:last-child) {
      td {
        border-bottom: $dataSourceIntBorder;
      }
    }

    td {
      padding: 2rem;
      vertical-align: top;
    }

    td:first-child {
      border-right: $dataSourceIntBorder;
    }
  }

}

.Pattern-kit {
  margin: 2rem 0;

  &:not(:last-child):after {
    content: "\00a0\00a0";
    width: 100%;
    border-bottom: $dataSourceExtBorder;
    display: flex;
    margin: 1rem 0;
  }

  input[type=text] {
    width: fit-content;
  }
}

.Field-list {
  border-collapse: collapse;
  width: 100%;

  td {
    padding: 1rem;
  }

  .Field-name-heading > th {
    font-size: x-large;
    text-align: left;
    padding: 1rem;
    background-color: rgba(0, 0, 0, .3) !important;
  }

  td:nth-of-type(2n+2) {
    background-color: rgba(10, 10, 10, .2);
  }

  tr:nth-of-type(2n+2) {
    background-color: rgba(10, 10, 10, .4);
  }
}

.data-source-form td {
  width: 100%;
  padding: 1rem;
}
