@use "colors";
@use "variables";
@use "buttons";

// EventsDisplay
@mixin Poster {
  box-sizing: content-box;
  border: 1px solid transparent;

  &:hover {
    background-color: rgba(255, 255, 255, .1);
    border-color: rgba(200, 200, 200, .1);
  }
}

@mixin EntityButton {
  padding: 1rem;
  border: 1px solid transparent;
  margin: 1rem .5rem;
  text-align: center;

  img {
    filter: saturate(80%) opacity(.8);
  }
  div {
    color: rgba(220, 220, 220, .7);
  }

  &:hover {
    cursor: pointer;
    border-color: rgba(150, 150, 150, .2);
    background-color: rgba(100, 100, 100, .1);

    img {
      filter: saturate(100%) opacity(1);
    }

    div {
      color: rgba(220, 220, 220, 1);
    }
  }
}

.Item-poster {
  @include Poster;
  max-width: 10vw;
}

.Event-display {
  display: flex;
  flex-wrap: wrap;
}

.Event-tile {
  @include EntityButton;
  width: 15vw;
  overflow: hidden;
  padding: 1rem;
  text-align: left;
  color: rgba(200, 200, 200, .6);

  &:hover {
    color: colors.$defaultFontColor;

    .Event-title > span {
      color: rgba(200, 200, 200, .4);

      span {
        color: rgba(200, 200, 200, .8);
      }
    }

    .Event-date {
      opacity: 1;
    }
  }

  .Event-poster {
    //@include Poster;
    max-width: variables.$eventPosterWidth;
  }

  .Event-title {
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    font-weight: normal;

    span {
      color: rgba(150, 150, 150, .4);

      span {
        color: rgba(150, 150, 150, .6);
      }
    }
  }

  .Event-date {
    font-size: small;
    color: colors.$mediumFontColor;
    opacity: .8;
  }
}

.Event-details-container {
  display: flex;

  img {
    width: 20vw;
    height: 20vh;
    margin-right: 1.5rem;
  }
}

.Event-detail-header {
  margin-bottom: 1.5rem;

  .Team-name {
    color: rgba(220, 220, 220, .75);
  }
}

.Event-button-container {
  display: flex;
  align-items: center;
  height: 2rem;
  margin: 2rem 0;

  & > * {
    margin-right: 1rem;
  }
}

.Video-source-metadata {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;

  .Video-source-metadata-field {
    margin-right: .75rem;

    div {
      padding: .7rem 1.7rem;
    }

    .Video-source-metadata-field-name {
      background-color: rgba(160, 160, 160, .1);
      color: colors.$mediumFontColor;
      font-weight: bold;
    }

    .Video-source-metadata-field-value {
      background-color: rgba(160, 160, 160, .05);
      color: rgba(240, 240, 240, .65);
    }
  }
}

.Entity-display {
  display: flex;
  flex-wrap: wrap;
}

// Competitions
.Competition-tile {
  @include EntityButton;
}

.Entity-poster {
  width: 8vw;
  height: 15vh;
  margin: 1.5rem;
}

// TeamsDisplay
.Team-tile {
  @include EntityButton;
}


// Plugins
.Refresh-container {
  display: flex;
  padding: 3rem 0;

  .Refresh-options-container {
    display: flex;
    align-items: center;
    width: fit-content;
    margin-left: 2rem;
    //visibility: hidden;

    & > p {
      color: colors.$mediumFontColor;
      padding: 0 1rem;
    }

    .Refresh-tool-container {
      display: flex;
      align-items: center;
    }

    .Refresh-option {
      border: none;
      border-bottom: 1px solid transparent;
      margin: 0 1em;
      background: none;
      font-size: variables.$defaultFontSize;
      color: colors.$defaultFontColor;

      &:hover {
        border-color: colors.$border;
      }
    }
  }
}

.Plugin-tile-container {
  display: flex;
  flex-wrap: wrap;

  .Plugin-button-tile {
    width: 15vw;
    min-width: 15vw;
    padding: 1.8rem;
    margin: 2rem;
    display: inline-block;
    border: 1px solid #333;
    border-radius: .6rem;
    box-shadow: 3px 3px 3px colors.$shadow;

    &.active {
      background-color: #444;
    }

    &:hover {
      cursor: pointer;
      background-color: rgba(255, 255, 255, .1);
    }

    .Plugin-button-title {
      font-weight: bold;
      color: #777;
    }

    &.active .Plugin-button-title {
      color: whitesmoke;
    }

    &.active .Plugin-id {
      color: #ccc;

      strong {
        color: whitesmoke;
      }
    }
  }
}

.Plugin-id {
  font-size: 10pt;
  margin: 4px;
  color: #666;

  strong {
    color: #aaa;
  }
}

// Data Sources
$dataSourceExtBorder: 1px solid #ccc;
$dataSourceIntBorder: 1px solid #666;

.Data-source-display {

  padding: 1rem 2rem;

  & > div {
    margin: 1rem 0;
  }

  label {
    font-size: 1.3rem;
    margin-right: 1rem;
  }

  input[type=text] {
    background: none;
    border: none;
    border-bottom: 1px solid #ccc;
    border-radius: 0;
    color: colors.$defaultFontColor;
    font-size: 11pt;
    display: flex;
    justify-content: center;

    &:disabled {
      background: none;
      border-color: transparent;
      color: #ccc;
    }

    &:focus {
      background-color: rgba(0, 0, 0, .2);
    }
  }
}

.Data-source-table {
  border-collapse: collapse;
  margin: 2rem 0;

  td {
    padding: 1.25rem;
    background-color: rgba(0, 0, 0, .1);

    &:nth-of-type(2n+2) {
      background-color: rgba(0, 0, 0, .15);
      color: #ccc;
    }
  }
}

.Type-header-container {
  display: flex;
  background-color: rgba(150, 150, 150, .25);

  .Type-header {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: .25rem 1.25rem;
    border-bottom: 2px solid transparent;

    &:hover {
      background-color: rgba(200, 200, 200, .2);
      cursor: pointer;
    }

    &.selected {
      border-bottom-color: colors.$selected;
    }
  }
}

.Pattern-kit-display {
  overflow: hidden;

  .Pattern-kit-type {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #333;
    padding-left: 1rem;

    input[type=text] {
      width: fit-content;
    }
  }

  .Pattern-kit-editor {
    border-collapse: collapse;
    border-radius: 1rem;
    width: 100%;

    tr:not(:last-child) {
      td {
        border-bottom: $dataSourceIntBorder;
      }
    }

    td {
      padding: 2rem;
      vertical-align: top;
    }

    td:first-child {
      border-right: $dataSourceIntBorder;
    }
  }

}

.Pattern-kit-type-header {
  display: flex;
  align-items: center;
  align-content: center;
  margin-bottom: .5rem;
  padding: .5rem 1rem;
  background-color: rgba(100, 100, 100, .5);


  .Filter-by-type-button {
    @include buttons.lowerButton;
    background: none;
    border: none;
    color: colors.$mediumFontColor;
    font-size: medium;
    padding: 0;
    border-bottom: 1px solid transparent;

    &:hover {
      border-color: #888;
    }

    img {
      height: 11px;
      transform: rotate(90deg);
      margin-left: 1em;
      filter: opacity(80);

      &.flipped {
        transform: rotate(-90deg);
      }

      &:hover {
        filter: none;
      }
    }
  }
}

.Pattern-kit {
  margin-bottom: 1.5rem;
  padding: 1rem;
  background-color: rgba(0, 0, 0, .15);

  input[type=text] {
    width: fit-content;
  }

  .Pattern-kit-header {
    display: flex;
    align-items: center;
    border-bottom: 1px dashed #888;

    & > * {
      margin-right: 3rem;
    }

    .Pattern-kit-delete-button {
      display: flex;
      align-items: center;
      color: colors.$defaultFontColor;
      background: none;
      border: none;
      font-size: medium;

      img {
        height: 18px;
        margin-right: .5em;
      }

      &:hover {
        filter: brightness(0) saturate(100%) invert(15%) sepia(76%) saturate(5964%) hue-rotate(360deg) brightness(100%) contrast(121%);
      }
    }
  }
}

.Field-list {
  border-collapse: collapse;
  width: 100%;

  td {
    padding: 1rem;

    &:nth-of-type(2n+1) {
      width: 15vw;
    }
  }

  .Field-name-heading > th {
    font-size: large;
    text-align: left;
    padding: .4rem 0;
    border-bottom: 1px dashed #777;
  }

  tbody {
    tr:hover td:nth-of-type(2n+1) {
      background-color: rgba(160, 160, 160, .15);
    }

    tr:hover td:nth-of-type(2n+2) {
      background-color: rgba(160, 160, 160, .1);
    }
  }

}

.Add-data-source-form {
  td {
    padding: 1rem;
  }
}

.Add-pattern-kit-form {
  width: 100%;
  margin: 0;
}

// File servers
.User-list {
  display: flex;
  flex-wrap: wrap;
  width: 100%;

  .User-tile {
    padding: 1rem;
    margin: 1rem;
    border: 1px solid colors.$mediumFontColor;
    border-radius: .35rem;
    display: flex;
    justify-content: space-between;
    width: 20vw;
    color: colors.$mediumFontColor;

    &:hover {
      color: colors.$defaultFontColor;
      border-color: colors.$defaultFontColor;

      & .Logged-in-checkbox::before {
        color: colors.$defaultFontColor;
        border-color: colors.$defaultFontColor;
      }
    }

    p {
      margin: .4rem 0;
      max-width: 15vw;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .Logged-in-checkbox {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      display: inline-flex;
      justify-content: center;

      &::before {
        content: '\00a0';
        color: colors.$mediumFontColor;
        border-radius: 100%;
        border: 1px solid colors.$mediumFontColor;
        width: .85rem;
        height: .85rem;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      &:checked::before {
        content: 'âœ”';
      }
    }

    .Menu-button {
      background: none;
      border: none;
      color: colors.$mediumFontColor;
      font-size: large;
      padding: .5rem 1rem;

      &:hover {
        background-color: rgba(100, 100, 100, .5);
        color: colors.$defaultFontColor;
      }
    }
  }
}

.User-delete-details {
  border-collapse: collapse;
  margin: 3rem 0;

  td {
    padding: 1.4rem;
    color: colors.$mediumFontColor;
  }

  td:first-child {
    font-weight: bolder;
    color: colors.$defaultFontColor;
  }

  td + td,
  th + th {
    border-left: 1px solid #666;
  }

  tr + tr {
    border-top: 1px solid #666;
  }
}

.User-credential-container {
  margin: 1rem 0;
  border: variables.$lightBorder;
  padding: 2rem;

  .User-credential-header {
    .Credential-header-button {
      background-color: colors.$defaultComponentBg;
      border: none;
      padding: 1rem 2rem;
      color: colors.$mediumFontColor;

      &.selected {
        background-color: rgba(100, 100, 100, .4);

        &:hover {
          background-color: rgba(100, 100, 100, .3);
        }
      }

      &:hover {
        background-color: rgba(100, 100, 100, .2);
        color: colors.$defaultFontColor;
      }
    }
  }

  .User-credential-display {
    border: variables.$lightBorder;
    padding: 1rem;
  }
}

.Add-new-user-form {

  .Form-row {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    padding: 1rem;

    input[type=text],
    input[type=password] {
      max-width: 75%;
      background: none;
    }

    .Hover-label {
      align-self: start;
      position: relative;
      transform: translateY(50%) translateX(20%);
    }
  }
}

.Cookie-display {
  max-width: 100%;
  overflow-x: scroll;

  .Cookie-display-table {
    $padding: .8rem;

    border-collapse: collapse;

    th {
      text-align: left;
      background-color: colors.$darkBg;
      padding: $padding;
    }

    tr:nth-of-type(2n) {
      background-color: rgba(0, 0, 0, .2);
    }

    td {
      padding: $padding;
      color: colors.$mediumFontColor;
      max-width: 15vw;
      overflow: hidden;
      text-overflow: ellipsis;

      &:nth-of-type(2n+1) {
        background-color: rgba(100, 100, 100, .2);
        color: colors.$defaultFontColor;
      }
    }
  }
}
