@use "sass:math";
@use "colors";
@use "variables";
@import "mixins";

.Add-button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 20px;
  height: 20px;
  border: 1px solid colors.$border;
  background: none;
  color: colors.$border;
  font-family: monospace;

  &:hover {
    color: colors.$defaultFontColor;
    border-color: colors.$defaultFontColor;
  }
}

.Add-new-button {
  display: flex;
  align-items: center;
  padding: 1rem 1.5rem;
  font-size: medium;
  color: colors.$lightFontColor;
  border: 2px solid transparent;

  &:hover {
    border-color: colors.$lightTransparent;
  }

  .Add-button {
    color: colors.$defaultFontColor;
    border-color: colors.$defaultFontColor;
    margin-right: 1rem;
  }
}

.Button-container {
  display: flex;
  justify-content: flex-end;
}

.Cancel-button {
  @include button;
  background-color: colors.$darkFontColor;
  border: 2px solid transparent;

  &:hover:not([disabled]) {
    background-color: colors.$mediumBg;
  }
}

.Clear-button {
  @include lower-button;
  opacity: .5;
  background: none;
  border: none;
  margin-left: 1rem;

  &:hover {
    opacity: 1;
  }
}

.Close-button {
  background: transparent url("data:image/svg+xml;charset=utf-8,<svg id='Layer_1' data-name='Layer 1' xmlns='http://www.w3.org/2000/svg'"+
            " viewBox='0 0 32 32'><title>close-button</title><path d='M258.43,280.51l-13.57,13.65,13.55,13.74a1.35,"+
            "1.35,0,0,1,.52,1c0,.93-.51,1.39-1.54,1.39a2,2,0,0,1-1.23-.48L242.9,296.23l-13.41,13.5a1.32,1.32,0,0,"+
            "1-1.05.53c-1,0-1.51-.47-1.51-1.42a1.6,1.6,0,0,1,.31-1l13.5-13.69-13.5-13.62a1.48,1.48,0,0,1-.31-.94c0-"+
            ".89.5-1.34,1.48-1.34a1.3,1.3,0,0,1,1,.57l13.37,13.34,13.34-13.43a1.8,1.8,0,0,1,1.23-.48c1,0,1.54.44,1.54"+
            ",1.32A1.32,1.32,0,0,1,258.43,280.51Z' transform='translate(-226.93 -278.26)'/></svg>") 50%/1em auto no-repeat;
  box-sizing: content-box;
  opacity: .5;
  width: 1rem;
  height: 1rem;
  border: 0;
  filter: invert(99%) brightness(120%);

  &:hover {
    opacity: 1;
  }
}

.Delete-button {
  @include icon-button(red);
  color: red;
  border-color: red;
}

.Download-button {
  @include icon-button(colors.$active);
  border-color: colors.$border;
}

.Edit-menu-button {
  $buttonSize: 1.2rem;
  width: $buttonSize;
  height: 100%;
  border: 0;
  background: none;
  color: colors.$defaultFontColor;
  padding: 1.2rem;
  display: flex;
  justify-content: center;
  align-items: center;

  &:hover {
    background-color: colors.$lightButtonBackground;
  }
}

.Edit-button {
  padding: .75rem;
  border: none;
  border-radius: 5px;
  background-color: rgba(100, 100, 100, .2);
  margin: 1rem 0;

  &:hover {
    background-color: rgba(100, 100, 100, .6);
  }
}

.File-upload {
  display: flex;
  align-items: center;
  justify-content: center;

  .File-upload-button {
    margin-right: 1rem;
    padding: .5em 1.2em;
    display: flex;
    align-items: center;
    width: fit-content;
    border-radius: 4px;
    border: 1px solid #666;
    color: colors.$mediumFontColor;

    &:hover {
      background-color: rgba(100, 100, 100, .4);
      color: colors.$defaultFontColor;
      border-color: colors.$border;
      cursor: pointer;

      img {
        opacity: .8;
      }
    }

    img {
      width: 1rem;
      opacity: .5;
    }

    input[type=file] {
      position: absolute;
      top: 0;
      right: 0;
      margin: 0;
      padding: 0;
      font-size: 20px;
      cursor: pointer;
      opacity: 0;
      filter: alpha(opacity=0);
    }
  }

  .File-path {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    max-width: 20vw;
    color: colors.$mediumFontColor;
  }
}

.Link-button {
  border: 0;
  background: none;
  color: colors.$mediumFontColor;
  text-decoration: underline #666;

  &:hover {
    color: colors.$defaultFontColor;
    text-decoration-color: #ccc;
  }
}

.More-button {
  width: 150px;
  height: 150px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 2px solid colors.$border;
  font-size: xx-large;
  color: colors.$mediumFontColor;
  text-decoration: none !important;

  img {
    width: 24px;
    opacity: .5;
  }

  &:hover {
    border-color: colors.$buttonBorder;

    img {
      opacity: .9;
    }
  }
}

.OK-button {
  @include button;
  box-sizing: content-box;
  background-color: colors.$submitButton;
  font-weight: bolder;

  &:hover:not([disabled]) {
    background-color: colors.$active !important;
  }
}

.Play-button {
  padding: .5rem 1rem;
  border: none;
  border-radius: 5px;
  background-color: colors.$highlight;
  filter: saturate(50%);
  display: flex;
  align-items: center;
  justify-content: center;

  svg {
    width: 16px;
    margin-right: .5em;
  }

  &:hover {
    filter: saturate(100%);
  }

  &:disabled {
    background-color: #888;

    svg {
      opacity: .5;
    }
  }
}

.Reset-button {
  @include icon-button(colors.$active);
}

.Save-button {
  @include icon-button(colors.$highlight);
}

.Small-button {
  @include button;
  border: 2px solid #ccc;
  border-radius: 5px;
}

.Toggle-switch {
  @include toggle-switch(variables.$sliderSize);
  position: relative;
  display: inline-block;
  cursor: pointer;

  .slider {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: colors.$darkBg;
    box-shadow: inset 0px -1px 10px colors.$shadow;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider:before, .slider > * {
    $size: calc(#{variables.$sliderSize} * 1.2);
    position: absolute;
    content: "";
    top: -3px;
    height: $size;
    width: $size;
    background-color: white;
    -webkit-transition: .4s;
    transition: .4s;
  }

  .slider > * {
    -webkit-transition: .4s;
    transition: .4s;
    max-width: 100%;
  }

  &.Checked > .slider {
    background-color: colors.$highlight;
    box-shadow: none;
  }

  &.Transitioning > .slider {
    background-color: #666;
  }

  &.Transitioning > .slider:before,
  &.Transitioning > .slider > * {
    -ms-transform: translateX(math.div(variables.$sliderSize, 2));
    transform: translateX(math.div(variables.$sliderSize, 2));
    background-color: #aaa;
    cursor: wait;
  }

  &.Checked > .slider:before,
  &.Checked > .slider > * {
    -ms-transform: translateX(variables.$sliderSize);
    transform: translateX(variables.$sliderSize);
  }

  & .spinner {
    opacity: 0;
  }

  &.Transitioning .spinner {
    opacity: 1;
  }

  /* Rounded sliders */
  .slider.round {
    border-radius: 2rem;
  }

  .slider.round:before {
    border-radius: 50%;
  }
}
